//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CommonInventoryComponent commonInventory { get { return (CommonInventoryComponent)GetComponent(GameComponentsLookup.CommonInventory); } }
    public bool hasCommonInventory { get { return HasComponent(GameComponentsLookup.CommonInventory); } }

    public void AddCommonInventory(CommonInventoryFacade newInventory) {
        var index = GameComponentsLookup.CommonInventory;
        var component = (CommonInventoryComponent)CreateComponent(index, typeof(CommonInventoryComponent));
        component.Inventory = newInventory;
        AddComponent(index, component);
    }

    public void ReplaceCommonInventory(CommonInventoryFacade newInventory) {
        var index = GameComponentsLookup.CommonInventory;
        var component = (CommonInventoryComponent)CreateComponent(index, typeof(CommonInventoryComponent));
        component.Inventory = newInventory;
        ReplaceComponent(index, component);
    }

    public void RemoveCommonInventory() {
        RemoveComponent(GameComponentsLookup.CommonInventory);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCommonInventory;

    public static Entitas.IMatcher<GameEntity> CommonInventory {
        get {
            if (_matcherCommonInventory == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CommonInventory);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCommonInventory = matcher;
            }

            return _matcherCommonInventory;
        }
    }
}
