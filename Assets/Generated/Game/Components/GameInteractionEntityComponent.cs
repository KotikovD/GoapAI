//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractionEntity interactionEntity { get { return (InteractionEntity)GetComponent(GameComponentsLookup.InteractionEntity); } }
    public bool hasInteractionEntity { get { return HasComponent(GameComponentsLookup.InteractionEntity); } }

    public void AddInteractionEntity(GameEntity newInteractionObject) {
        var index = GameComponentsLookup.InteractionEntity;
        var component = (InteractionEntity)CreateComponent(index, typeof(InteractionEntity));
        component.InteractionObject = newInteractionObject;
        AddComponent(index, component);
    }

    public void ReplaceInteractionEntity(GameEntity newInteractionObject) {
        var index = GameComponentsLookup.InteractionEntity;
        var component = (InteractionEntity)CreateComponent(index, typeof(InteractionEntity));
        component.InteractionObject = newInteractionObject;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractionEntity() {
        RemoveComponent(GameComponentsLookup.InteractionEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractionEntity;

    public static Entitas.IMatcher<GameEntity> InteractionEntity {
        get {
            if (_matcherInteractionEntity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractionEntity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractionEntity = matcher;
            }

            return _matcherInteractionEntity;
        }
    }
}
